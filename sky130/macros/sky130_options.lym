<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Set Options (Restart required!)</description>
 <version/>
 <category/>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name>Set options</group-name>
 <menu-path>skymenu&gt;end("sky130 PDK").end</menu-path>
 <interpreter>ruby</interpreter>
 <dsl-interpreter-name/>
 <text># Copyright 2022 SkyWater PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

 module MyMacro
 
  include RBA


  #####################################################################################
  # Loading options
  #####################################################################################
  mw = RBA::MainWindow::instance

  # create a toolbar skymenu
  mw.menu.insert_menu("skymenu.end", "drc_menu", "efabless DRC Options")
  mw.menu.insert_menu("skymenu.end", "lvs_menu", "Klayout LVS Options")
  mw.menu.insert_menu("skymenu.end", "lvs_magic_menu", "Magic LVS Options")
  mw.menu.insert_menu("skymenu.end", "pex_magic_menu", "Magic PEX-RC Options")
  mw.menu.insert_menu("skymenu.end", "pex_c_magic_menu", "Magic PEX-C Options")
  mw.menu.insert_separator("skymenu.pex_c_magic_menu+", "name2")

  #####################################################################################
  # Adding Klayout DRC (efabless) options
  #####################################################################################
  
  #1 FEOL
  feol_action = RBA::Action::new
  feol_action.title = "Frontend checks"
  feol_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
    text = File.read(f)
    if text.include?("$feol = \"true\"")
      feol_action.checked=(true)
    else
      feol_action.checked=(false)
    end
  }
  feol_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
      text = File.read(f)
      if feol_action.is_checked?
        feol_bool = "true"
      else
        feol_bool = "false"
      end
      if text.include?("$feol")
        new_contents = text.gsub(/\$feol = \".*\"/, '$feol = "'+ feol_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*drc)/m, '$feol = "'+ feol_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.drc_menu.end", "feol", feol_action)
  
  #2 BEOL
  beol_action = RBA::Action::new
  beol_action.title = "Backend checks"
  beol_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
    text = File.read(f)
    if text.include?("$beol = \"true\"")
      beol_action.checked=(true)
    else
      beol_action.checked=(false)
    end
  }
  beol_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
      text = File.read(f)
      if beol_action.is_checked?
        beol_bool = "true"
      else
        beol_bool = "false"
      end
      if text.include?("$beol")
        new_contents = text.gsub(/\$beol = \".*\"/, '$beol = "'+ beol_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*drc)/m, '$beol = "'+ beol_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.drc_menu.end", "beol", beol_action)
  
  #3 OFFGRID
  offgrid_action = RBA::Action::new
  offgrid_action.title = "Offgrid checks"
  offgrid_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
    text = File.read(f)
    if text.include?("$offgrid = \"true\"")
      offgrid_action.checked=(true)
    else
      offgrid_action.checked=(false)
    end
  }
  offgrid_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
      text = File.read(f)
      if offgrid_action.is_checked?
        offgrid_bool = "true"
      else
        offgrid_bool = "false"
      end
      if text.include?("$offgrid")
        new_contents = text.gsub(/\$offgrid = \".*\"/, '$offgrid = "'+ offgrid_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*drc)/m, '$offgrid = "'+ offgrid_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.drc_menu.end", "offgrid", offgrid_action)
  
  #4 SEAL
  seal_action = RBA::Action::new
  seal_action.title = "Seal ring checks"
  seal_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
    text = File.read(f)
    if text.include?("$seal = \"true\"")
      seal_action.checked=(true)
    else
      seal_action.checked=(false)
    end
  }
  seal_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
      text = File.read(f)
      if seal_action.is_checked?
        seal_bool = "true"
      else
        seal_bool = "false"
      end
      if text.include?("$seal")
        new_contents = text.gsub(/\$seal = \".*\"/, '$seal = "'+ seal_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*drc)/m, '$seal = "'+ seal_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.drc_menu.end", "seal", seal_action)
  
  #5 floating_met
  floating_met_action = RBA::Action::new
  floating_met_action.title = "Floating metal checks"
  floating_met_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
    text = File.read(f)
    if text.include?("$floating_met = \"true\"")
      floating_met_action.checked=(true)
    else
      floating_met_action.checked=(false)
    end
  }
  floating_met_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
      text = File.read(f)
      if floating_met_action.is_checked?
        floating_met_bool = "true"
      else
        floating_met_bool = "false"
      end
      if text.include?("$floating_met")
        new_contents = text.gsub(/\$floating_met = \".*\"/, '$floating_met = "'+ floating_met_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*drc)/m, '$floating_met = "'+ floating_met_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.drc_menu.end", "floating_met", floating_met_action)
  
  #6 sram_exclude
  sram_exclude_action = RBA::Action::new
  sram_exclude_action.title = "Exclude SRAM checks"
  sram_exclude_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
    text = File.read(f)
    if text.include?("$sram_exclude = \"true\"")
      sram_exclude_action.checked=(true)
    else
      sram_exclude_action.checked=(false)
    end
  }
  sram_exclude_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_drc.lydrc", 'w') { |f| 
      text = File.read(f)
      if sram_exclude_action.is_checked?
        sram_exclude_bool = "true"
      else
        sram_exclude_bool = "false"
      end
      if text.include?("$sram_exclude")
        new_contents = text.gsub(/\$sram_exclude = \".*\"/, '$sram_exclude = "'+ sram_exclude_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*drc)/m, '$sram_exclude = "'+ sram_exclude_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.drc_menu.end", "sram_exclude", sram_exclude_action)

  #####################################################################################
  # Adding Klayout LVS options
  #####################################################################################
  
  #1 Adding substrate name
  run_action = RBA::Action::new
  run_action.title = "Substrate name"
  run_action.on_triggered do
    sub_name = RBA::InputDialog::ask_string("Substrate name", "Please enter substrate name", "GND")
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if sub_name 
        if text.include?("$lvs_sub")
          new_contents = text.gsub(/\$lvs_sub = \".*\"/, '$lvs_sub = "'+ sub_name + '"')
          File.open(f, "w") {|file| file.puts new_contents }
        else
          new_contents = text.gsub(/(\# \%.*lvs)/m, '$lvs_sub = "'+ sub_name +'"' +"\n"+'\1')
          File.open(f, "w") {|file| file.puts new_contents }
        end
      end
    }
    #system( "klayout -r #{File.expand_path File.dirname(__FILE__)}/sky130.lvs -rd input=#{RBA::CellView::active.filename}" )
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "SUB_name", run_action)
  
  #2 Setting run mode
  run_mode_action = RBA::Action::new
  run_mode_action.title = "Run mode"
  run_mode_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      run_mode_select = RBA::InputDialog::ask_item("Run mode", "Select run mode:", [ "tiling", "deep", "flat" ], 1)
      if run_mode_select 
        if text.include?("$run_mode")
          new_contents = text.gsub(/\$run_mode = \".*\"/, '$run_mode = "'+ run_mode_select + '"')
          File.open(f, "w") {|file| file.puts new_contents }
        else
          new_contents = text.gsub(/(\# \%.*lvs)/m, '$run_mode = "'+ run_mode_select +'"' +"\n"+'\1')
          File.open(f, "w") {|file| file.puts new_contents }
        end
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "run_mode", run_mode_action)
  
  #3 Setting spice net names
  spice_net_action = RBA::Action::new
  spice_net_action.title = "SPICE net name"
  spice_net_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$spice_net_names = \"true\"")
      spice_net_action.checked=(true)
    else
      spice_net_action.checked=(false)
    end
  }
  spice_net_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if spice_net_action.is_checked?
        spice_net_bool = "true"
      else
        spice_net_bool = "false"
      end
      if text.include?("$spice_net_names")
        new_contents = text.gsub(/\$spice_net_names = \".*\"/, '$spice_net_names = "'+ spice_net_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$spice_net_names = "'+ spice_net_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "SPICE_net_name", spice_net_action)
  
  #4 Setting spice comments
  spice_comment_action = RBA::Action::new
  spice_comment_action.title = "SPICE comments"
  spice_comment_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$spice_comments = \"true\"")
      spice_comment_action.checked=(true)
    else
      spice_comment_action.checked=(false)
    end
  }
  spice_comment_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if spice_comment_action.is_checked?
        spice_comment_bool = "true"
      else
        spice_comment_bool = "false"
      end
      if text.include?("$spice_comments")
        new_contents = text.gsub(/\$spice_comments = \".*\"/, '$spice_comments = "'+ spice_comment_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$spice_comments = "'+ spice_comment_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "SPICE_comments", spice_comment_action)
  
  #5 Setting scaling
  scale_action = RBA::Action::new
  scale_action.title = "Scaling x10^6"
  scale_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$scale = \"true\"")
      scale_action.checked=(true)
    else
      scale_action.checked=(false)
    end
  }
  scale_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if scale_action.is_checked?
        scale_bool = "true"
      else
        scale_bool = "false"
      end
      if text.include?("$scale")
        new_contents = text.gsub(/\$scale = \".*\"/, '$scale = "'+ scale_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$scale = "'+ scale_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "scale", scale_action)
  
  #6 Setting verbose mode
  verbose_action = RBA::Action::new
  verbose_action.title = "Verbose mode"
  verbose_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$verbose = \"true\"")
      verbose_action.checked=(true)
    else
      verbose_action.checked=(false)
    end
  }
  verbose_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if verbose_action.is_checked?
        verbose_bool = "true"
      else
        verbose_bool = "false"
      end
      if text.include?("$verbose")
        new_contents = text.gsub(/\$verbose = \".*\"/, '$verbose = "'+ verbose_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$verbose = "'+ verbose_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "verbose", verbose_action)
  
  #7 Setting schematic simplification
  schematic_simple_action = RBA::Action::new
  schematic_simple_action.title = "Schematic simplify"
  schematic_simple_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$schematic_simplify = \"true\"")
      schematic_simple_action.checked=(true)
    else
      schematic_simple_action.checked=(false)
    end
  }
  schematic_simple_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if schematic_simple_action.is_checked?
        schematic_simple_bool = "true"
      else
        schematic_simple_bool = "false"
      end
      if text.include?("$schematic_simplify")
        new_contents = text.gsub(/\$schematic_simplify = \".*\"/, '$schematic_simplify = "'+ schematic_simple_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$schematic_simplify = "'+ schematic_simple_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "schematic_simple", schematic_simple_action)
  
  #8 Setting netlist only
  net_only_action = RBA::Action::new
  net_only_action.title = "Netlist only"
  net_only_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$net_only = \"true\"")
      net_only_action.checked=(true)
    else
      net_only_action.checked=(false)
    end
  }
  net_only_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if net_only_action.is_checked?
        net_only_bool = "true"
      else
        net_only_bool = "false"
      end
      if text.include?("$net_only")
        new_contents = text.gsub(/\$net_only = \".*\"/, '$net_only = "'+ net_only_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$net_only = "'+ net_only_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "net_only", net_only_action)
  
  #9 Setting top level pins
  top_lvl_pins_action = RBA::Action::new
  top_lvl_pins_action.title = "Top level pins"
  top_lvl_pins_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$top_lvl_pins = \"true\"")
      top_lvl_pins_action.checked=(true)
    else
      top_lvl_pins_action.checked=(false)
    end
  }
  top_lvl_pins_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if top_lvl_pins_action.is_checked?
        top_lvl_pins_bool = "true"
      else
        top_lvl_pins_bool = "false"
      end
      if text.include?("$top_lvl_pins")
        new_contents = text.gsub(/\$top_lvl_pins = \".*\"/, '$top_lvl_pins = "'+ top_lvl_pins_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$top_lvl_pins = "'+ top_lvl_pins_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "top_lvl_pins", top_lvl_pins_action)
  
  #10 Setting device combine
  combine_action = RBA::Action::new
  combine_action.title = "Devices combine"
  combine_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$combine = \"true\"")
      combine_action.checked=(true)
    else
      combine_action.checked=(false)
    end
  }
  combine_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if combine_action.is_checked?
        combine_bool = "true"
      else
        combine_bool = "false"
      end
      if text.include?("$combine")
        new_contents = text.gsub(/\$combine = \".*\"/, '$combine = "'+ combine_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$combine = "'+ combine_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "combine", combine_action)
  
  #11 Setting purge
  purge_action = RBA::Action::new
  purge_action.title = "Purge"
  purge_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$purge = \"true\"")
      purge_action.checked=(true)
    else
      purge_action.checked=(false)
    end
  }
  purge_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if purge_action.is_checked?
        purge_bool = "true"
      else
        purge_bool = "false"
      end
      if text.include?("$purge")
        new_contents = text.gsub(/\$purge = \".*\"/, '$purge = "'+ purge_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$purge = "'+ purge_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "purge", purge_action)
  
  #12 Setting purge nets
  purge_nets_action = RBA::Action::new
  purge_nets_action.title = "Purge nets"
  purge_nets_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
    text = File.read(f)
    if text.include?("$purge_nets = \"true\"")
      purge_nets_action.checked=(true)
    else
      purge_nets_action.checked=(false)
    end
  }
  purge_nets_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if purge_nets_action.is_checked?
        purge_nets_bool = "true"
      else
        purge_nets_bool = "false"
      end
      if text.include?("$purge_nets")
        new_contents = text.gsub(/\$purge_nets = \".*\"/, '$purge_nets = "'+ purge_nets_bool + '"')
        File.open(f, "w") {|file| file.puts new_contents }
      else
        new_contents = text.gsub(/(\# \%.*lvs)/m, '$purge_nets = "'+ purge_nets_bool +'"' +"\n"+'\1')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "purge_nets", purge_nets_action)
  
  #13 Adding schematic path
  sch_action = RBA::Action::new
  sch_action.title = "Schematic path"
  sch_action.on_triggered do
    sch_path = RBA::InputDialog::ask_string("Schematic path", "Please enter schematic path", "lvs_temp.cdl")
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_lvs.lylvs", 'w') { |f| 
      text = File.read(f)
      if sch_path 
        if text.include?("$schematic")
          new_contents = text.gsub(/\$schematic = \".*\"/, '$schematic = "'+ sch_path + '"')
          File.open(f, "w") {|file| file.puts new_contents }
        else
          new_contents = text.gsub(/(\# \%.*lvs)/m, '$schematic = "'+ sch_path +'"' +"\n"+'\1')
          File.open(f, "w") {|file| file.puts new_contents }
        end
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_menu.end", "sch_path", sch_action)
  
  #####################################################################################
  # Adding Magic LVS options
  #####################################################################################
  
  #1 Setting Combine devices
  mag_combine_action = RBA::Action::new
  mag_combine_action.title = "Combine devices"
  mag_combine_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("combine = \"-M \"")
      mag_combine_action.checked=(true)
    else
      mag_combine_action.checked=(false)
    end
  }
  mag_combine_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
      text = File.read(f)
      if mag_combine_action.is_checked?
        mag_combine_bool = "-M "
      else
        mag_combine_bool = ""
      end
      new_contents = text.gsub(/combine = \".*\"/, 'combine = "'+ mag_combine_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.lvs_magic_menu.end", "mag_combine", mag_combine_action)
  
  #2 Setting Distribute area and perimeter
  mag_distrib_action = RBA::Action::new
  mag_distrib_action.title = "Distribute area and perimeter"
  mag_distrib_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("distrib = \"-d \"")
      mag_distrib_action.checked=(true)
    else
      mag_distrib_action.checked=(false)
    end
  }
  mag_distrib_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
      text = File.read(f)
      if mag_distrib_action.is_checked?
        mag_distrib_bool = "-d "
      else
        mag_distrib_bool = ""
      end
      new_contents = text.gsub(/distrib = \".*\"/, 'distrib = "'+ mag_distrib_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.lvs_magic_menu.end", "mag_distrib", mag_distrib_action)
  
  #3 Setting Less attributes
  mag_no_attr_action = RBA::Action::new
  mag_no_attr_action.title = "Less attributes"
  mag_no_attr_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("no_attr = \"-B \"")
      mag_no_attr_action.checked=(true)
    else
      mag_no_attr_action.checked=(false)
    end
  }
  mag_no_attr_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
      text = File.read(f)
      if mag_no_attr_action.is_checked?
        mag_no_attr_bool = "-B "
      else
        mag_no_attr_bool = ""
      end
      new_contents = text.gsub(/no_attr = \".*\"/, 'no_attr = "'+ mag_no_attr_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.lvs_magic_menu.end", "mag_no_attr", mag_no_attr_action)
  
  #4 Setting Purge nets
  mag_purge_action = RBA::Action::new
  mag_purge_action.title = "Purge nets"
  mag_purge_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("purge = \"-F \"")
      mag_purge_action.checked=(true)
    else
      mag_purge_action.checked=(false)
    end
  }
  mag_purge_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
      text = File.read(f)
      if mag_purge_action.is_checked?
        mag_purge_bool = "-F "
      else
        mag_purge_bool = ""
      end
      new_contents = text.gsub(/purge = \".*\"/, 'purge = "'+ mag_purge_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.lvs_magic_menu.end", "mag_purge", mag_purge_action)


  #5.1 Setting Trimmed characters - #
  mag_trim_hash_action = RBA::Action::new
  mag_trim_hash_action.title = "Trimmed characters - \#"
  mag_trim_hash_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("trim_hash = \"-t # \"")
      mag_trim_hash_action.checked=(true)
    else
      mag_trim_hash_action.checked=(false)
    end
  }
  mag_trim_hash_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
      text = File.read(f)
      if mag_trim_hash_action.is_checked?
        mag_trim_hash_bool = "-t # "
      else
        mag_trim_hash_bool = ""
      end
      new_contents = text.gsub(/trim_hash = \".*\"/, 'trim_hash = "'+ mag_trim_hash_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.lvs_magic_menu.end", "mag_trim_hash", mag_trim_hash_action)

  #5.2 Setting Trimmed characters - !
  mag_trim_exclam_action = RBA::Action::new
  mag_trim_exclam_action.title = "Trimmed characters - \!"
  mag_trim_exclam_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("trim_exclam = \"-t ! \"")
      mag_trim_exclam_action.checked=(true)
    else
      mag_trim_exclam_action.checked=(false)
    end
  }
  mag_trim_exclam_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
      text = File.read(f)
      if mag_trim_exclam_action.is_checked?
        mag_trim_exclam_bool = "-t ! "
      else
        mag_trim_exclam_bool = ""
      end
      new_contents = text.gsub(/trim_exclam = \".*\"/, 'trim_exclam = "'+ mag_trim_exclam_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.lvs_magic_menu.end", "mag_trim_exclam", mag_trim_exclam_action)

  #6 Setting Run mode
  mag_run_mode_action = RBA::Action::new
  mag_run_mode_action.title = "Run mode"
  mag_run_mode_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
      text = File.read(f)
      mag_run_mode_select = RBA::InputDialog::ask_item("Run mode", "Select running mode:", [ "hier", "flat"], 1)
      if mag_run_mode_select
        if mag_run_mode_select == "hier"
          new_contents = text.gsub(/mode = \".*\"/, 'mode = "-J '+ mag_run_mode_select + ' "')
          File.open(f, "w") {|file| file.puts new_contents }
        else
          new_contents = text.gsub(/mode = \".*\"/, 'mode = "-J '+ mag_run_mode_select + ' "')
          File.open(f, "w") {|file| file.puts new_contents }
        end
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_magic_menu.end", "mag_run_mode", mag_run_mode_action)

  #7 Adding Xschem netlist path
  mag_xschem_action = RBA::Action::new
  mag_xschem_action.title = "Xschem netlist path"
  mag_xschem_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_netgen_lvs.lym", 'w') { |f| 
      text = File.read(f)
      mag_xschem = RBA::InputDialog::ask_string("Xschem netlist path", "Please enter xschem netlist path", "~/.xschem/simulations")
      if mag_xschem
        new_contents = text.gsub(/simpath = \".*\"/, 'simpath = "'+ mag_xschem +'"')
        File.open(f, "w") {|file| file.puts new_contents }
      end
    }
  end
  mw.menu.insert_item("skymenu.lvs_magic_menu.end", "mag_xschem", mag_xschem_action)
  
  #####################################################################################
  # Adding Magic PEX(RC) options
  #####################################################################################
  
  #1 Setting Combine devices
  combine_pex_action = RBA::Action::new
  combine_pex_action.title = "Combine devices"
  combine_pex_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("combine = \"-M \"")
      combine_pex_action.checked=(true)
    else
      combine_pex_action.checked=(false)
    end
  }
  combine_pex_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
      text = File.read(f)
      if combine_pex_action.is_checked?
        combine_bool = "-M "
      else
        combine_bool = ""
      end
      new_contents = text.gsub(/combine = \".*\"/, 'combine = "'+ combine_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_magic_menu.end", "combine_pex", combine_pex_action)
  
  #2 Setting Distribute area and perimeter
  distrib_pex_action = RBA::Action::new
  distrib_pex_action.title = "Distribute area and perimeter"
  distrib_pex_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("distrib = \"-d \"")
      distrib_pex_action.checked=(true)
    else
      distrib_pex_action.checked=(false)
    end
  }
  distrib_pex_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
      text = File.read(f)
      if distrib_pex_action.is_checked?
        distrib_bool = "-d "
      else
        distrib_bool = ""
      end
      new_contents = text.gsub(/distrib = \".*\"/, 'distrib = "'+ distrib_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_magic_menu.end", "distrib_pex", distrib_pex_action)
  
  #3 Setting Less attributes
  no_attr_pex_action = RBA::Action::new
  no_attr_pex_action.title = "Less attributes"
  no_attr_pex_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("no_attr = \"-B \"")
      no_attr_pex_action.checked=(true)
    else
      no_attr_pex_action.checked=(false)
    end
  }
  no_attr_pex_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
      text = File.read(f)
      if no_attr_pex_action.is_checked?
        no_attr_bool = "-B "
      else
        no_attr_bool = ""
      end
      new_contents = text.gsub(/no_attr = \".*\"/, 'no_attr = "'+ no_attr_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_magic_menu.end", "no_attr_pex", no_attr_pex_action)
  
  #4 Setting Purge nets
  purge_pex_action = RBA::Action::new
  purge_pex_action.title = "Purge nets"
  purge_pex_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("purge = \"-F \"")
      purge_pex_action.checked=(true)
    else
      purge_pex_action.checked=(false)
    end
  }
  purge_pex_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
      text = File.read(f)
      if purge_pex_action.is_checked?
        purge_bool = "-F "
      else
        purge_bool = ""
      end
      new_contents = text.gsub(/purge = \".*\"/, 'purge = "'+ purge_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_magic_menu.end", "purge_pex", purge_pex_action)


  #5.1 Setting Trimmed characters - #
  trim_hash_pex_action = RBA::Action::new
  trim_hash_pex_action.title = "Trimmed characters - \#"
  trim_hash_pex_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("trim_hash = \"-t # \"")
      trim_hash_pex_action.checked=(true)
    else
      trim_hash_pex_action.checked=(false)
    end
  }
  trim_hash_pex_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
      text = File.read(f)
      if trim_hash_pex_action.is_checked?
        trim_hash_bool = "-t # "
      else
        trim_hash_bool = ""
      end
      new_contents = text.gsub(/trim_hash = \".*\"/, 'trim_hash = "'+ trim_hash_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_magic_menu.end", "trim_hash_pex", trim_hash_pex_action)

  #5.2 Setting Trimmed characters - !
  trim_exclam_pex_action = RBA::Action::new
  trim_exclam_pex_action.title = "Trimmed characters - \!"
  trim_exclam_pex_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("trim_exclam = \"-t ! \"")
      trim_exclam_pex_action.checked=(true)
    else
      trim_exclam_pex_action.checked=(false)
    end
  }
  trim_exclam_pex_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
      text = File.read(f)
      if trim_exclam_pex_action.is_checked?
        trim_exclam_bool = "-t ! "
      else
        trim_exclam_bool = ""
      end
      new_contents = text.gsub(/trim_exclam = \".*\"/, 'trim_exclam = "'+ trim_exclam_bool + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_magic_menu.end", "trim_exclam_pex", trim_exclam_pex_action)

  #6 Setting Run mode
  run_mode_pex_action = RBA::Action::new
  run_mode_pex_action.title = "Run mode"
  run_mode_pex_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex.lym", 'w') { |f| 
      text = File.read(f)
      run_mode_pex_select = RBA::InputDialog::ask_item("Run mode", "Select running mode:", [ "hier", "flat"], 1)
      if run_mode_pex_select
        if run_mode_pex_select == "hier"
          new_contents = text.gsub(/mode = \".*\"/, 'mode = "-J '+ run_mode_pex_select + ' "')
          File.open(f, "w") {|file| file.puts new_contents }
        else
          new_contents = text.gsub(/mode = \".*\"/, 'mode = "-J '+ run_mode_pex_select + ' "')
          File.open(f, "w") {|file| file.puts new_contents }
        end
      end
    }
  end
  mw.menu.insert_item("skymenu.pex_magic_menu.end", "run_mode_pex", run_mode_pex_action)

  #####################################################################################
  # Adding Magic PEX(C) options
  #####################################################################################
  
  #1 Setting Combine devices
  combine_pex_c_action = RBA::Action::new
  combine_pex_c_action.title = "Combine devices"
  combine_pex_c_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("combine = \"-M \"")
      combine_pex_c_action.checked=(true)
    else
      combine_pex_c_action.checked=(false)
    end
  }
  combine_pex_c_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
      text = File.read(f)
      if combine_pex_c_action.is_checked?
        combine_bool_c = "-M "
      else
        combine_bool_c = ""
      end
      new_contents = text.gsub(/combine = \".*\"/, 'combine = "'+ combine_bool_c + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_c_magic_menu.end", "combine_pex_c", combine_pex_c_action)
  
  #2 Setting Distribute area and perimeter
  distrib_pex_c_action = RBA::Action::new
  distrib_pex_c_action.title = "Distribute area and perimeter"
  distrib_pex_c_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("distrib = \"-d \"")
      distrib_pex_c_action.checked=(true)
    else
      distrib_pex_c_action.checked=(false)
    end
  }
  distrib_pex_c_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
      text = File.read(f)
      if distrib_pex_c_action.is_checked?
        distrib_bool_c = "-d "
      else
        distrib_bool_c = ""
      end
      new_contents = text.gsub(/distrib = \".*\"/, 'distrib = "'+ distrib_bool_c + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_c_magic_menu.end", "distrib_pex_c", distrib_pex_c_action)
  
  #3 Setting Less attributes
  no_attr_pex_c_action = RBA::Action::new
  no_attr_pex_c_action.title = "Less attributes"
  no_attr_pex_c_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("no_attr = \"-B \"")
      no_attr_pex_c_action.checked=(true)
    else
      no_attr_pex_c_action.checked=(false)
    end
  }
  no_attr_pex_c_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
      text = File.read(f)
      if no_attr_pex_c_action.is_checked?
        no_attr_bool_c = "-B "
      else
        no_attr_bool_c = ""
      end
      new_contents = text.gsub(/no_attr = \".*\"/, 'no_attr = "'+ no_attr_bool_c + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_c_magic_menu.end", "no_attr_pex_c", no_attr_pex_c_action)
  
  #4 Setting Purge nets
  purge_pex_c_action = RBA::Action::new
  purge_pex_c_action.title = "Purge nets"
  purge_pex_c_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("purge = \"-F \"")
      purge_pex_c_action.checked=(true)
    else
      purge_pex_c_action.checked=(false)
    end
  }
  purge_pex_c_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
      text = File.read(f)
      if purge_pex_c_action.is_checked?
        purge_bool_c = "-F "
      else
        purge_bool_c = ""
      end
      new_contents = text.gsub(/purge = \".*\"/, 'purge = "'+ purge_bool_c + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_c_magic_menu.end", "purge_pex_c", purge_pex_c_action)


  #5.1 Setting Trimmed characters - #
  trim_hash_pex_c_action = RBA::Action::new
  trim_hash_pex_c_action.title = "Trimmed characters - \#"
  trim_hash_pex_c_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("trim_hash = \"-t # \"")
      trim_hash_pex_c_action.checked=(true)
    else
      trim_hash_pex_c_action.checked=(false)
    end
  }
  trim_hash_pex_c_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
      text = File.read(f)
      if trim_hash_pex_c_action.is_checked?
        trim_hash_bool_c = "-t # "
      else
        trim_hash_bool_c = ""
      end
      new_contents = text.gsub(/trim_hash = \".*\"/, 'trim_hash = "'+ trim_hash_bool_c + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_c_magic_menu.end", "trim_hash_pex_c", trim_hash_pex_c_action)

  #5.2 Setting Trimmed characters - !
  trim_exclam_pex_c_action = RBA::Action::new
  trim_exclam_pex_c_action.title = "Trimmed characters - \!"
  trim_exclam_pex_c_action.checkable=(true)
  File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
    text = File.read(f)
    if text.include?("trim_exclam = \"-t ! \"")
      trim_exclam_pex_c_action.checked=(true)
    else
      trim_exclam_pex_c_action.checked=(false)
    end
  }
  trim_exclam_pex_c_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
      text = File.read(f)
      if trim_exclam_pex_c_action.is_checked?
        trim_exclam_bool_c = "-t ! "
      else
        trim_exclam_bool_c = ""
      end
      new_contents = text.gsub(/trim_exclam = \".*\"/, 'trim_exclam = "'+ trim_exclam_bool_c + '"')
      File.open(f, "w") {|file| file.puts new_contents }
    }
  end
  mw.menu.insert_item("skymenu.pex_c_magic_menu.end", "trim_exclam_pex_c", trim_exclam_pex_c_action)

  #6 Setting Run mode
  run_mode_pex_c_action = RBA::Action::new
  run_mode_pex_c_action.title = "Run mode"
  run_mode_pex_c_action.on_triggered do
    File.open(File.expand_path File.dirname(__FILE__) + "/sky130_magic_pex_c.lym", 'w') { |f| 
      text = File.read(f)
      run_mode_pex_c_select = RBA::InputDialog::ask_item("Run mode", "Select running mode:", [ "hier", "flat"], 1)
      if run_mode_pex_c_select
        if run_mode_pex_c_select == "hier"
          new_contents = text.gsub(/mode = \".*\"/, 'mode = "-J '+ run_mode_pex_c_select + ' "')
          File.open(f, "w") {|file| file.puts new_contents }
        else
          new_contents = text.gsub(/mode = \".*\"/, 'mode = "-J '+ run_mode_pex_c_select + ' "')
          File.open(f, "w") {|file| file.puts new_contents }
        end
      end
    }
  end
  mw.menu.insert_item("skymenu.pex_c_magic_menu.end", "run_mode_pex_c", run_mode_pex_c_action)


  #####################################################################################

end


</text>
</klayout-macro>
